" Basic Configuration
set nocompatible
filetype off
set shell=/bin/bash
set encoding=utf8
set mouse=a
set nonumber
set signcolumn=yes
set hlsearch
set smartindent
set autoindent
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
set cursorline
let mapleader=';'
nnoremap <c-c> <silent> <c-c>
nnoremap \ :nohlsearch<cr>

" Plugin Manager (begin)
call plug#begin('~/.vim/bundle')

Plug 'VundleVim/Vundle.vim'
Plug 'google/vim-maktaba'
Plug 'google/vim-glaive'

" Project Setup
Plug 'cherrry/1ndependence.vim'
Plug 'editorconfig/editorconfig-vim'

" Color Scheme
Plug 'chriskempson/base16-vim'

" Syntax Files
Plug 'bfrg/vim-cpp-modern'
Plug 'ap/vim-css-color'
Plug 'pangloss/vim-javascript'
Plug 'elzr/vim-json'

" UI Display
Plug 'itchyny/lightline.vim'
Plug 'Yggdroot/indentLine'
Plug 'mhinz/vim-signify'

" Editing
Plug 'neoclide/coc.nvim'
Plug 'scrooloose/nerdcommenter'
Plug 'google/vim-codefmt'

" Navigation
Plug 'othree/eregex.vim'
Plug 'chaoren/vim-wordmotion'
Plug 'itchyny/vim-cursorword'
Plug 'lambdalisue/fern.vim'

" Plugin Manager (end)
call plug#end()
call glaive#Install() 

" Basic Configuration (con't)
filetype plugin indent on

" Scroll Behavior
nnoremap <c-j> 2<c-e>
nnoremap <c-k> 2<c-y>

" Color Scheme
colorscheme base16-default-dark
set termguicolors
syntax on
highlight Normal ctermbg=None guibg=NONE
highlight Comment cterm=italic

" Indent Guides
set list listchars=tab:\▏\ ,trail:·
let g:indentLine_char='▏'

" Lightline
let g:lightline={'colorscheme':'wombat'}
set laststatus=2
set noshowmode

let g:vim_json_syntax_conceal=0

" CodeFmt
Glaive codefmt plugin[mappings]

" Tab Completion
inoremap <silent><expr> <tab>
      \ pumvisible() ? "\<c-n>" :
      \ <sid>check_back_space() ? "\<tab>" :
      \ coc#refresh()
inoremap <expr><s-tab> pumvisible() ? "\<c-p>" : "\<c-h>"

function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

" Hover Documentation
nnoremap <silent> K :call <sid>show_documentation()<cr>

function! s:show_documentation()
  if (index(['vim','help'], &filetype) >= 0)
    execute 'h '.expand('<cword>')
  elseif (coc#rpc#ready())
    call CocActionAsync('doHover')
  else
    execute '!' . &keywordprg . " " . expand('<cword>')
  endif
endfunction

" Navigation
nnoremap <c-n> :Fern . -drawer -toggle<cr>

" Fix delete
set backspace=2
